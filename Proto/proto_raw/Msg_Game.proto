syntax = "proto3";

message SkillItem {
    uint32 SkillID = 1;
    int32  Level = 2;
    int32  KeyPos = 3;   //强化等级
}

message GmStopServerReq {
    uint32    Data        	= 1;
}

message GmStopServerAck {
    uint32    RetCode       = 1;
}


message CheckVersionReq {
    string   ClientVerion   = 1;
    int32    Channel        = 2;
}

message CheckVersionAck {
    uint32    RetCode        = 1;
    string    ClientVerion   = 2;
}

message AccountLog
{
    int32  Channel    = 1;   //渠道ID
    string Version    = 2;   //版本
    uint64 AccountID  = 3;   //帐号
    string Uuid       = 4;   //设备UUID
    string Idfa       = 5;   //idfa
    string Imodel     = 6;   //机型
    string Imei       = 7;   //手机MEI
    string MacAddr    = 8;   //设备MAC地址
    int32  IpAddr     = 9;   //ip地址
}  

message AccountRegReq {
    string   AccountName = 1;
    string   Password    = 2;
    int32    Channel     = 3;
    AccountLog RegLog    = 4;
}

message AccountRegAck {
    uint32    RetCode      = 1;
    uint64    AccountID    = 2; //账号ID
}

message AccountLoginReq {
    string    AccountName    = 1;
    string    Password       = 2;
    int32     Channel        = 3;
    uint32    FromChannel    = 4;
    AccountLog LoginLog      = 5;
}

message AccountLoginAck {
    uint32    RetCode        = 1;
    uint64    AccountID      = 2;
    int32     LastSvrID      = 3;  //上次登录SvrID
    string    LastSvrName    = 4;
}


message ClientServerListReq {
    uint64    AccountID      = 1;
    int32     Channel        = 2; //渠道包
    string    ClientVersion  = 3; //客户端版本号
}


message ClientServerNode {
    int32    SvrID          = 1;
    string   SvrName        = 2;
    int32    SvrFlag        = 3; //服务器标记
    int32    CornerMark     = 4; //服务器角标
    int64    SvrOpenTime    = 5;
    int32    SvrStatus      = 6; //1:表示服务器在线，0:表示不在线
}

message ClientServerListAck {
    uint32    RetCode    = 1;
    repeated ClientServerNode SvrNode    = 2;
}


message SvrRegToSvrReq {
    int32     ServerID      = 1;
    string    ServerName    = 2;
    string    ServerIp      = 3;
    int32     ServerPort    = 4;
    int32     HttpPort      = 5;
}

message SvrRegToSvrAck {
    uint32    RetCode       = 1;
    string    NewSvrName    = 2;
}

message SelectServerReq {
    uint64    AccountID   = 1;
    int32     ServerID    = 2;
}

message SelectServerAck {
    uint32   RetCode     = 1;
    uint64   AccountID   = 2;
    int32    ServerID    = 3;
    string   ServerAddr  = 4;
    int32    ServerPort  = 5;
    int32    LoginCode   = 6;
}

message RoleItem {
    uint64    RoleID  = 1;
    string    Name    = 2;
    int32     Carrer  = 3;
    int32     Level   = 4;
}

message RoleListReq {
    uint64   AccountID    = 1;
    int32    LoginCode    = 2;
}

message RoleListAck {
    uint32    RetCode            = 1;
    uint64    AccountID          = 2;
    repeated  RoleItem RoleList  = 3;
}

message RoleCreateReq {
    uint64   AccountID    = 1;
    string   Name         = 2;
    int32    Carrer       = 3;
    int32    Channel      = 4;
}

message RoleCreateAck {
    uint32    RetCode      = 1;
    uint64    AccountID    = 2;
    uint64    RoleID       = 3;
    string    Name         = 4;
    int32     Carrer       = 5;
}

message RoleDeleteReq {
    uint64    AccountID    = 1;
    uint64    RoleID       = 2;
}

message RoleDeleteAck {
    uint32    RetCode = 1;
}

message RoleLoginReq {
    uint64    AccountID    = 1;
    uint64    RoleID       = 2;
    int32     LoginCode    = 3;
}

message RoleLogoutReq {
    uint64    AccountID = 1;
}

message RoleLogoutAck {
    uint32    RetCode = 1;
}

message RoleDisconnectReq {
    uint64    AccountID    = 1;
    uint64    RoleID       = 2;
    int32     LoginCode    = 3;
}

message RoleDisconnectAck {
    uint32    RetCode = 1;
}

message RoleReconnectReq {
    uint64    RoleID = 1;
}

message RoleReconnectAck {
    uint32    RetCode = 1;
}

message RemoveConnectNty {
    uint64    RoleID = 1;
}

///创建场景
message CreateNewSceneReq{
    int32    CopyID        = 1;
    int32    CopyType      = 2;
    int32    PlayerNum     = 3;
    uint64   CreateParam   = 4;
}

///创建场景
message CreateNewSceneAck{
    uint32    RetCode        = 1;
    int32     CopyID         = 2;
    int32     CopyGuid       = 3;
    uint64    CreateParam    = 4;
    int32     ServerID       = 5;
    int32     CopyType       = 6;
    int32     PlayerNum      = 7;
}

////
message EnterSceneReq {
    uint64   RoleID      = 1;
    int32    ServerID    = 2;  //场景服ID
    int32    CopyGuid    = 3;  //副本实例ID
    int32    CopyID      = 4;  //副本类型ID
}

message EnterSceneAck {
    uint32   RetCode        = 1;
    int32    CopyID         = 2;
    int32    CopyGuid       = 3;
    //以下是主角创建需要信息
    uint64   RoleID         = 4;
    int32    Carrer         = 5;
    int32    ActorID        = 6;
    string   RoleName       = 7;
    int32    Camp           = 8;
    float    X              = 9;
    float    Y              = 10;
    float    Z              = 11;
    float    Ft             = 12;
    int32    Hp             = 13;
    int32    Mp             = 14;
    int32    HpMax          = 15;
    int32    MpMax          = 16;
    int32    Speed          = 17;
    int32    MountID        = 18;
    repeated int32 Equips   = 19; //武器
    repeated SkillItem Skills  = 20;//技能
}

message BackToCityReq {
    uint32    Param = 1;
}

message BackToCityAck {
    uint32    RetCode = 1;
}

message LeaveSceneReq {
    uint64   RoleID = 1;
    int32    Reason = 2;
}

message LeaveSceneAck {
    uint32    RetCode = 1;
}

message AbortSceneReq {
    uint64   RoleID = 1;
    int32    Reason = 2;
}

message AbortSceneAck {
    uint32    RetCode = 1;
}

message AbortSceneNty {
    uint64   RoleID      = 1;
    int32    CopyID      = 2;  //副本类型
    int32    CopyGuid    = 3;
    int32    CopyType    = 4;
    int32    ServerID    = 5;
    int32    Param       = 6;
}

message TransRoleData {
    uint64   RoleID         = 1;
    string   Name           = 2;
    int32    CarrerID       = 3;
    int32    ActorID        = 4;
    int32    Level          = 5;
    int32    MountID        = 6;
    int32    Robot          = 7; //是否是机器人
    repeated int32 Equips   = 8;
    repeated int32 Propertys= 9;
    repeated SkillItem Skills = 10;
}

message TransPetData {
    uint64   PetGuid            = 1;
    int32    PetID              = 2;
    int32    ActorID            = 3;
    string   Name               = 4;
    int32    Level              = 5;
    repeated int32 Propertys    = 6;
    repeated SkillItem  Skills  = 7;
}


message TransPartnerData {
    uint64   PartnerGuid        = 1;
    int32    PartnerID          = 2;
    int32    ActorID            = 3;
    string   Name               = 4;
    int32    Level              = 5;
    repeated int32 Propertys    = 6;
    repeated SkillItem  Skills  = 7;
}

message TransferDataItem {
    int32               Camp        = 1;            //战场中的阵营
    TransRoleData       RoleData    = 2;
    TransPetData        PetData     = 3;
    TransPartnerData    PartnerData = 4;
}

message TransferDataReq {
   repeated TransferDataItem TransDatas = 1;
}

message TransferDataAck {
    uint32   RetCode        = 1;
    uint64   RoleID         = 2;
    int32    CopyID         = 3;
    int32    CopyGuid       = 4;
    int32    ServerID       = 5;
} 

message NotifyIntoScene {
    uint64   RoleID        = 1;
    int32    CopyID        = 2;
    int32    CopyGuid      = 3;
    int32    ServerID      = 4;
}

message NearByRoleItem {
    uint64   RoleID    = 1;
    int32    ActorID   = 2;
    int32    Level     = 3;
    string   Name      = 4;
}

message CopyInsItem {
    uint32   CopyGuid    = 1;
    int32    CopyID      = 2;
    int32    CopyType    = 3;
    int32    ServerID    = 4;
}

message CopyReportReq 
{
    int32    ServerID = 1;
    repeated CopyInsItem CopyList = 2;
}

message UseHpBottleReq {

}

message UseHpBottleAck {
    uint32   RetCode = 1;
    int32    Count   = 2;
}

message UseMpBottleReq {
}

message UseMpBottleAck {
    uint32   RetCode = 1;
    int32    Count   = 2;
}

message ChatMessageReq {
    string    SrcName        = 1;
    uint64    SrcID          = 2;
    uint64    TargetID       = 3; //目标ID
    int32     Channel        = 4; //聊天频道
    uint64    GuildID        = 5; //公会ID
    string    Content        = 6;
	
}

message ChatMessageAck {
    uint32    RetCode = 1;
}

message ChatMessageNty {
    string    SrcName        = 1;
    uint64    SrcID          = 2;
    uint64    TargetID       = 3; //目标ID
    int32     Channel        = 4;
    uint64    GuildID        = 5;
    string    Content        = 6;
}

message SealAccountReq {
    string    AccountName  = 1;
    uint64    AccountID    = 2;
    int32     Channel      = 3;
    int32     SealTime     = 4;
    bool      Seal         = 5;
}

message SealAccountAck {
    uint32    RetCode        = 1;
    string    AccountName    = 2;
    uint64    AccountID      = 3; //账号ID
}

message SetLastServerNty {
    uint64    AccountID    = 1;
    int32     ServerID      = 2;
}

message CommonReq {
    uint32    Param1    = 1;
}

message CommonAck {
    uint32    RetCode    = 1;
}

message BroadMessageNotify {
    uint32      MsgID            = 1;
    repeated    uint32 ConnID    = 2;
    bytes       MsgData          = 3;    
}

message LogicRegToLoginReq {
    int32    ServerID      = 1;
    string   ServerName    = 2;
    string   SvrInnerIp    = 3;
    int32    ServerPort    = 4;
    int32    HttpPort      = 5;
    int32    WatchPort     = 6;
}

message LogicRegToLoginAck {
    uint32    RetCode       = 1;
    string    NewSvrName    = 2;
}

message LogicUpdateInfoReq {
    int32     ServerID      = 1;
    string    ServerName   = 2;
    int32     MaxOnline    = 3;
    int32     CurOnline    = 4;
    int32     TotalNum     = 5;
    int32     CacheNum     = 6;
    int32     Status       = 7;
}

message LogicUpdateInfoAck {
    uint32    RetCode       = 1;
    uint64    SvrOpenTime   = 2; //开服时间
}

message WatchHeartBeatReq {
    uint32    Data = 1;
    uint64    ProcessID    = 2;
}

message WatchHeartBeatAck {
    uint32    RetCode     = 1;
    uint32    Data        = 2;
    uint64    ProcessID   = 3;
}

message SetupEquipReq {
    uint64    EquipGuid = 1;
    uint64    BagGuid = 2;
}

message SetupEquipAck {
    uint32    RetCode    = 1;
}

message UnsetEquipReq {
    uint64    EquipGuid = 1;
}

message UnsetEquipAck {
    uint32    RetCode    = 1;
}

message SetupGemReq {
    uint64    GemGuid        = 1;
    uint64    BagGuid        = 2;
    int32     TargetPos    = 3;
}

message SetupGemAck {
    uint32    RetCode    = 1;
}

message UnsetGemReq {
    uint64    GemGuid = 1;
}

message UnsetGemAck {
    uint32    RetCode    = 1;
}

message SetupPartnerReq {
    uint64    PartnerGuid    = 1;
    int32    TargetPos    = 2;
}

message SetupPartnerAck {
    uint32    RetCode    = 1;
}

message UnsetPartnerReq {
    int32    TargetPos = 1;
}

message UnsetPartnerAck {
    uint32    RetCode    = 1;
}

message SetupMountReq {
    uint64    MountGuid    = 1;
    int32     TargetPos    = 2;
}

message SetupMountAck {
    uint32    RetCode    = 1;
}

message UnsetMountReq {
    uint64    MountGuid = 1;
}

message UnsetMountAck {
    uint32    RetCode    = 1;
}


message SetupPetReq {
    uint64    PetGuid    = 1;
}

message SetupPetAck {
    uint32    RetCode    = 1;
}

message UnsetPetReq {
    uint64    PetGuid = 1;
}

message UnsetPetAck {
    uint32    RetCode    = 1;
}

message StoreBuyReq {
    int32    StoreType = 1;
    int32    StoreID = 2;
    int32    BuyNum = 3;
}

message StoreBuyAck {
    uint32    RetCode    = 1;
}

//玩家一些数据发生变化，由逻辑服通知战斗服
message ObjectChangeNotify {
    int64   RoleID      = 1;        //变化的角色ID
    int32   ChangeType  = 2; //变化的类型
    int64   IntValue1   = 3;
    int64   IntValue2   = 4;
    string  StrValue    = 5;
}

message HitEffectItem
{
    uint64            CastGuid    = 1; //施放者GUID
    uint64            TargetGuid  = 2; //目标GUID
    int32             HurtValue   = 3; //伤害值
    bool              Crit        = 4; //是否暴击
    uint32            HitActionID = 5;
    uint32            HitEffectID = 6;
    float             HitDistance = 7;
}

message HitEffectNtf
{
    repeated HitEffectItem ItemList = 1;
}

message UseItemReq {
}

message UseItemAck {
}

message MsgGetRandomNameReq {
    int32 Sex = 1;
}

message MsgGetRandomNameAck {
    string Name = 1;
}


